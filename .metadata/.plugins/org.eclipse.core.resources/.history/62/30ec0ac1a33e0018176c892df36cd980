package com.dmk.controllers;

import java.util.List;
import java.util.Optional;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.dmk.models.Produto;
import com.dmk.response.Response;
import com.dmk.services.ProdutoSevice;

@RestController
@RequestMapping("/dmk/produto")
@CrossOrigin(origins = "*")
public class ProdutoController {

	private static final Logger log = LoggerFactory.getLogger(ProdutoController.class);

	@Autowired
	private ProdutoSevice produtoService;

	@GetMapping(value = "/produto/{id}")
	public ResponseEntity<Response<Produto>> buscarProduto(@PathVariable("id") Long id) {
		log.info("Buscando produto por ID: {}", id);
		Response<Produto> response = new Response<Produto>();
		Optional<Produto> produto = produtoService.buscaProduto(id);

		if (produto.isPresent()) {
			log.info("Produto n達o encontrado para o ID: {}", id);
			response.getErrors().add("Produto n達o encontrado para o ID " + id);
			return ResponseEntity.badRequest().body(response);
		}

		response.setData(produto.get());
		return ResponseEntity.ok(response);
	}
x
	@GetMapping(value = "/produtos")
	public ResponseEntity<List<Produto>> buscarProdutos() {
		log.info("Buscando produto");
		// Response<Produto> response = new Response<Produto>();
		List<Produto> produto = produtoService.buscaProdutos();

		if (!produto.isEmpty()) {
			log.info("Produtos n達o encontrados");
			// response.getErrors().add("Produto n達o encontrados");
			return ResponseEntity.badRequest().body(produto);
		}
		// response.setData(zproduto.get());
		return new ResponseEntity<List<Produto>>(produto, HttpStatus.OK);

	}
}
